{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","CardsArray","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","searchfield","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAbF,SAACC,GACb,IAAOC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GACpB,OACC,sBAAKC,UAAY,sDAAjB,UACC,qBAAKC,IAAM,SAASC,IAAG,+BAA4BH,EAA5B,cACvB,gCACC,mCAAMF,EAAN,OACA,kCAAKC,EAAL,cCaWK,EAlBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACZC,EAAaD,EAAOE,KAAK,SAACC,EAAKC,GACpC,OACC,cAAC,EAAD,CAEAT,GAAIK,EAAOI,GAAGT,GACdF,KAAQO,EAAOI,GAAGX,KAClBC,MAASM,EAAOI,GAAGV,OAHZM,EAAOI,GAAGT,OAOnB,OACC,gCACKM,EADL,QCDaI,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACnB,OACC,qBAAKV,UAAY,MAAjB,SACC,uBACAA,UAAY,mCACZW,KAAK,SACLC,YAAc,gBACdC,SAAYH,OCCAI,EARA,SAAClB,GACf,OACC,qBAAKmB,MAAQ,CAACC,UAAW,SAAWC,OAAQ,kBAAmBC,OAAQ,SAAvE,SACEtB,EAAMuB,YCkBKC,E,kDApBd,WAAYxB,GAAO,IAAD,8BACjB,gBACKyB,MAAQ,CACZC,UAAW,GAHK,E,qDAOlB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG1B,WAEC,OAAIG,KAAKJ,MAAMC,SACP,kDAEDG,KAAK7B,MAAMuB,a,GAjBOQ,aCMrBN,G,MAAQ,CACbjB,OAAS,GACTwB,YAAc,KA6CAC,E,kDAzCd,aAAc,IAAD,8BACZ,gBAWDC,eAAiB,SAACC,GACjB,EAAKL,SAAS,CAACE,YAAaG,EAAMC,OAAOC,SAXzC,EAAKZ,MAAQA,EAFD,E,qDAKb,WAAoB,IAAD,OAClBa,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAKA,EAASC,UAC3BF,MAAK,SAAAG,GAAU,EAAKZ,SAAS,CAACtB,OAAOkC,S,oBAQxC,WAAS,IAAD,OACDC,EAAiBd,KAAKJ,MAAMjB,OAAOoC,QAAO,SAAAC,GAC/C,OAAOA,EAAM5C,KAAK6C,cAAcC,SAAS,EAAKtB,MAAMO,YAAYc,kBAEjE,OAAIjB,KAAKJ,MAAMjB,OAAOwC,OAKpB,sBAAK5C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,2BACA,cAAC,EAAD,CAAWU,aAAgBe,KAAKK,iBAChC,cAAC,EAAD,UACA,cAAC,EAAD,UACC,cAAC,EAAD,CAAU1B,OAAQmC,WATd,8C,GAtBQZ,aCDHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.0b421cf2.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) =>{\n\tconst {name, email, id} = props;\n\treturn(\n\t\t<div className = \"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n\t\t\t<img alt = \"robots\" src = {`https://robohash.org/${id}?200x200`} />\n\t\t\t<div>\n\t\t\t\t<h2> {name} </h2>\n\t\t\t\t<p> {email} </p>\n\t\t\t</div>\n\t\t</div>\n\n\t);\n}\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({robots}) => {\n\tconst CardsArray = robots.map ((user,i) => {\n\t\treturn (\n\t\t\t<Card \n\t\t\tkey = {robots[i].id}\n\t\t\tid={robots[i].id} \n\t\t\tname = {robots[i].name} \n\t\t\temail = {robots[i].email} \n\t\t\t/>\n\t\t);\n\t})\n\treturn (\n\t\t<div>\n\t\t    {CardsArray};\n\t\t  </div>\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n\treturn (\n\t\t<div className = \"pa2\">\n\t\t\t<input \n\t\t\tclassName = \"pa3 ba b--green bg-lightest-blue\"\n\t\t\ttype=\"search\" \n\t\t\tplaceholder = \"search robots\" \n\t\t\tonChange = {searchChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style ={{overflowY: 'scroll' , border: '1px solid black', height: '500px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n};\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundry extends Component{\n\tconstructor(props){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\thasError : false,\n\t\t}\n\t}\n\n\tcomponentDidCatch(error, info){\n\t\tthis.setState({hasError: true});\n\t}\n\n\trender(){\n\t\t\n\t\tif (this.state.hasError){\n\t\t\treturn <h1> OOPS, not good </h1>\n\t\t}\n\t\treturn this.props.children;\n\t}\n}\n\nexport default ErrorBoundry;","import React,{ Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\n\nconst state = {\n\trobots : [],\n\tsearchfield : \"\",\n}\n\nclass App extends Component{\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = state;\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response =>  response.json())\n\t\t\t.then(users => {this.setState({robots:users})});\n\t\t\n\t}\n\n\tonSearchChange = (event) =>{\n\t\tthis.setState({searchfield: event.target.value})\n\t}\n\n\trender(){\n\t\tconst filteredRobots = this.state.robots.filter(robot =>{\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n\t\t})\n\t\tif(!this.state.robots.length){\n\t\t\treturn <h1>Loading </h1>;\n\t\t}\n\t\telse{\n\t\t\treturn(\n\t\t\t\t<div className='tc'>\n\t\t\t\t\t<h1 className='f1'> RoboFriends </h1>\n\t\t\t\t\t<SearchBox searchChange = {this.onSearchChange} />\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t<ErrorBoundry>\n\t\t\t\t\t\t<CardList robots={filteredRobots} />\n\t\t\t\t\t</ErrorBoundry>\n\t\t\t\t\t</Scroll>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\t\n\t}\n\t\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}